{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dell304/Selieznov/todo React/react_typescript/src/componenst/InputMain/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { connect } from \"react-redux\"; // const deleteHendler = () => {\n//   dispatch(deletTodo(itemObj.id));\n// };\n\nconst InputMain = ({\n  dispatch,\n  placeHolder,\n  action,\n  actionArguments,\n  toggleTitleState,\n  deleteHendler\n}) => {\n  _s();\n\n  let input;\n  const initialvalu = actionArguments ? actionArguments.payload : \"\";\n  const submitContent = useCallback(e => {\n    e.preventDefault();\n    if (toggleTitleState) toggleTitleState();\n\n    if (!input.value.trim()) {\n      if (deleteHendler) deleteHendler();\n      return;\n    }\n\n    actionArguments ? dispatch(action(input.value, actionArguments.id)) : dispatch(action(input.value));\n    input.value = \"\";\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitContent,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: placeHolder,\n      ref: node => {\n        input = node;\n        if (node) node.focus();\n        if (node) node.value = initialvalu;\n      },\n      onBlur: submitContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputMain, \"tKHi3/nGdaln/OLR7waobSy/a2E=\");\n\n_c = InputMain;\nexport default connect()(InputMain);\n\nvar _c;\n\n$RefreshReg$(_c, \"InputMain\");","map":{"version":3,"sources":["/home/dell304/Selieznov/todo React/react_typescript/src/componenst/InputMain/index.tsx"],"names":["React","useCallback","connect","InputMain","dispatch","placeHolder","action","actionArguments","toggleTitleState","deleteHendler","input","initialvalu","payload","submitContent","e","preventDefault","value","trim","id","node","focus"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;AACA;AACA;;AAcA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,QADiB;AAEjBC,EAAAA,WAFiB;AAGjBC,EAAAA,MAHiB;AAIjBC,EAAAA,eAJiB;AAKjBC,EAAAA,gBALiB;AAMjBC,EAAAA;AANiB,CAAD,KAOL;AAAA;;AACX,MAAIC,KAAJ;AACA,QAAMC,WAAW,GAAGJ,eAAe,GAAGA,eAAe,CAACK,OAAnB,GAA6B,EAAhE;AAEA,QAAMC,aAAa,GAAGZ,WAAW,CAAEa,CAAD,IAAO;AACvCA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIP,gBAAJ,EAAsBA,gBAAgB;;AACtC,QAAI,CAACE,KAAK,CAACM,KAAN,CAAYC,IAAZ,EAAL,EAAyB;AACvB,UAAIR,aAAJ,EAAmBA,aAAa;AAChC;AACD;;AACDF,IAAAA,eAAe,GACXH,QAAQ,CAACE,MAAM,CAACI,KAAK,CAACM,KAAP,EAAcT,eAAe,CAACW,EAA9B,CAAP,CADG,GAEXd,QAAQ,CAACE,MAAM,CAACI,KAAK,CAACM,KAAP,CAAP,CAFZ;AAIAN,IAAAA,KAAK,CAACM,KAAN,GAAc,EAAd;AACD,GAZgC,EAY9B,EAZ8B,CAAjC;AAcA,sBACE;AAAM,IAAA,QAAQ,EAAEH,aAAhB;AAAA,2BACE;AACE,MAAA,WAAW,EAAER,WADf;AAEE,MAAA,GAAG,EAAGc,IAAD,IAAU;AACbT,QAAAA,KAAK,GAAGS,IAAR;AACA,YAAIA,IAAJ,EAAUA,IAAI,CAACC,KAAL;AACV,YAAID,IAAJ,EAAUA,IAAI,CAACH,KAAL,GAAaL,WAAb;AACX,OANH;AAOE,MAAA,MAAM,EAAEE;AAPV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAtCD;;GAAMV,S;;KAAAA,S;AAwCN,eAAeD,OAAO,GAAGC,SAAH,CAAtB","sourcesContent":["import React, { useCallback } from \"react\";\nimport { connect } from \"react-redux\";\n\n// const deleteHendler = () => {\n//   dispatch(deletTodo(itemObj.id));\n// };\n\ninterface Props {\n  dispatch: any;\n  placeHolder: string;\n  action: (...a: any) => { type: string; payload: string; id?: number };\n  actionArguments?: {\n    payload: string;\n    id: number;\n  };\n  toggleTitleState?: () => void;\n  deleteHendler?: () => any;\n}\n\nconst InputMain = ({\n  dispatch,\n  placeHolder,\n  action,\n  actionArguments,\n  toggleTitleState,\n  deleteHendler,\n}: Props) => {\n  let input: any;\n  const initialvalu = actionArguments ? actionArguments.payload : \"\";\n\n  const submitContent = useCallback((e) => {\n    e.preventDefault();\n    if (toggleTitleState) toggleTitleState();\n    if (!input.value.trim()) {\n      if (deleteHendler) deleteHendler();\n      return;\n    }\n    actionArguments\n      ? dispatch(action(input.value, actionArguments.id))\n      : dispatch(action(input.value));\n\n    input.value = \"\";\n  }, []);\n\n  return (\n    <form onSubmit={submitContent}>\n      <input\n        placeholder={placeHolder}\n        ref={(node) => {\n          input = node;\n          if (node) node.focus();\n          if (node) node.value = initialvalu;\n        }}\n        onBlur={submitContent}\n      ></input>\n    </form>\n  );\n};\n\nexport default connect()(InputMain);\n"]},"metadata":{},"sourceType":"module"}