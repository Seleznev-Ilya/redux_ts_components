{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dell304/Selieznov/todo React/react_typescript/src/componenst/TodoItem/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, memo } from \"react\";\nimport Textinput from \"../TextInput\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleTodo } from \"../../actions\";\nimport { editTodo } from \"../../actions\";\nimport { deletTodo } from \"../../actions\";\nimport checkImg from \"../../asset/images/check.svg\";\nimport uncheckImg from \"../../asset/images/uncheck.svg\";\nimport crossImg from \"../../asset/images/cross.svg\";\nimport styled from \"styled-components\";\nconst TextinputSryle = styled.input`\n  color: red;\n  font-size: 20px;\n`;\n_c = TextinputSryle;\n\nconst TodoItem = ({\n  itemObj\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [edir, setEdit] = useState(true);\n\n  const toggleHendel = () => {\n    dispatch(toggleTodo(itemObj.id));\n  };\n\n  const toggleTitleState = () => {\n    setEdit(!edir);\n  };\n\n  const deleteHendler = () => {\n    dispatch(deletTodo(itemObj.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `item underline ${edir ? \"\" : \" focus\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox\",\n      onClick: toggleHendel,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${itemObj.completed ? uncheckImg : checkImg}`,\n        alt: \"checkImg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: edir ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title_p\",\n        onDoubleClick: toggleTitleState,\n        children: itemObj.payload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextinputSryle, {\n          children: /*#__PURE__*/_jsxDEV(Textinput, {\n            placeHolder: \"\",\n            action: editTodo,\n            actionArguments: itemObj,\n            toggleTitleState: toggleTitleState,\n            deleteHendler: deleteHendler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cross\",\n      onClick: deleteHendler,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: crossImg,\n        alt: \"crossImg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoItem, \"nkaOASxO2tf4nf84z/6bZaBu2/E=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = TodoItem;\nexport default _c3 = /*#__PURE__*/memo(TodoItem);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TextinputSryle\");\n$RefreshReg$(_c2, \"TodoItem\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/home/dell304/Selieznov/todo React/react_typescript/src/componenst/TodoItem/index.tsx"],"names":["React","useState","memo","Textinput","useDispatch","toggleTodo","editTodo","deletTodo","styled","TextinputSryle","input","TodoItem","itemObj","dispatch","edir","setEdit","toggleHendel","id","toggleTitleState","deleteHendler","completed","uncheckImg","checkImg","payload","crossImg"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,IAA1B,QAAsC,OAAtC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,SAAT,QAA0B,eAA1B;;;;AAMA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,cAAc,GAAGD,MAAM,CAACE,KAAM;AACpC;AACA;AACA,CAHA;KAAMD,c;;AASN,MAAME,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AAAA;;AACvC,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAU,IAAV,CAAhC;;AAEA,QAAMe,YAAY,GAAG,MAAM;AACzBH,IAAAA,QAAQ,CAACR,UAAU,CAACO,OAAO,CAACK,EAAT,CAAX,CAAR;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BH,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAFD;;AAIA,QAAMK,aAAa,GAAG,MAAM;AAC1BN,IAAAA,QAAQ,CAACN,SAAS,CAACK,OAAO,CAACK,EAAT,CAAV,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAG,kBAAiBH,IAAI,GAAG,EAAH,GAAQ,QAAS,EAAvD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,OAAO,EAAEE,YAAnC;AAAA,6BACE;AACE,QAAA,GAAG,EAAG,GAAEJ,OAAO,CAACQ,SAAR,GAAoBC,UAApB,GAAiCC,QAAS,EADpD;AAEE,QAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACGR,IAAI,gBACH;AAAG,QAAA,SAAS,EAAC,SAAb;AAAuB,QAAA,aAAa,EAAEI,gBAAtC;AAAA,kBACGN,OAAO,CAACW;AADX;AAAA;AAAA;AAAA;AAAA,cADG,gBAKH;AAAA,+BACE,QAAC,cAAD;AAAA,iCACE,QAAC,SAAD;AACE,YAAA,WAAW,EAAE,EADf;AAEE,YAAA,MAAM,EAAEjB,QAFV;AAGE,YAAA,eAAe,EAAEM,OAHnB;AAIE,YAAA,gBAAgB,EAAEM,gBAJpB;AAKE,YAAA,aAAa,EAAEC;AALjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YAPF,eA0BE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,OAAO,EAAEA,aAAhC;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEK,QAAV;AAAoB,QAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CAhDD;;GAAMb,Q;UACaP,W;;;MADbO,Q;AAkDN,kCAAeT,IAAI,CAACS,QAAD,CAAnB","sourcesContent":["import React, { useState, memo } from \"react\";\nimport Textinput from \"../TextInput\";\n\nimport { useDispatch } from \"react-redux\";\nimport { toggleTodo } from \"../../actions\";\nimport { editTodo } from \"../../actions\";\nimport { deletTodo } from \"../../actions\";\n\nimport checkImg from \"../../asset/images/check.svg\";\nimport uncheckImg from \"../../asset/images/uncheck.svg\";\nimport crossImg from \"../../asset/images/cross.svg\";\n\nimport styled from \"styled-components\";\n\nconst TextinputSryle = styled.input`\n  color: red;\n  font-size: 20px;\n`;\n\ninterface Props {\n  itemObj: any;\n}\n\nconst TodoItem = ({ itemObj }: Props) => {\n  const dispatch = useDispatch();\n  const [edir, setEdit] = useState<boolean>(true);\n\n  const toggleHendel = () => {\n    dispatch(toggleTodo(itemObj.id));\n  };\n\n  const toggleTitleState = () => {\n    setEdit(!edir);\n  };\n\n  const deleteHendler = () => {\n    dispatch(deletTodo(itemObj.id));\n  };\n\n  return (\n    <div className={`item underline ${edir ? \"\" : \" focus\"}`}>\n      <div className=\"checkbox\" onClick={toggleHendel}>\n        <img\n          src={`${itemObj.completed ? uncheckImg : checkImg}`}\n          alt=\"checkImg\"\n        />\n      </div>\n      <div className=\"title\">\n        {edir ? (\n          <p className=\"title_p\" onDoubleClick={toggleTitleState}>\n            {itemObj.payload}\n          </p>\n        ) : (\n          <div>\n            <TextinputSryle>\n              <Textinput\n                placeHolder={\"\"}\n                action={editTodo}\n                actionArguments={itemObj}\n                toggleTitleState={toggleTitleState}\n                deleteHendler={deleteHendler}\n              />\n            </TextinputSryle>\n          </div>\n        )}\n      </div>\n      <div className=\"cross\" onClick={deleteHendler}>\n        <img src={crossImg} alt=\"crossImg\" />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TodoItem);\n"]},"metadata":{},"sourceType":"module"}