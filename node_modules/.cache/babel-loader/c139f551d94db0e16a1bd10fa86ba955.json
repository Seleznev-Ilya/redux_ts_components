{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dell304/Selieznov/todo React/react_typescript/src/componenst/TodoList/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { memo } from \"react\"; // import { connect } from \"react-redux\";\n\nimport TodoItem from \"../../componenst/TodoItem\";\nimport { useSelector } from \"react-redux\"; // interface Props {\n//   todoList: [\n//     key: {\n//       id: number;\n//       payload: string;\n//       completed: boolean;\n//     }\n//   ];\n// }\n\nconst TodoList = () =>\n/* { todoList }: Props */\n{\n  _s();\n\n  const currentFilter = useSelector(store => store.currentFilter);\n  const todoList = useSelector(store => store.todoList);\n\n  const storeFiltered = (store, currentState) => {\n    let arrStore;\n    currentState === \"all\" ? arrStore = store : arrStore = store.filter(item => {\n      return item.completed === (currentState === \"completed\");\n    });\n    return arrStore;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: storeFiltered(todoList, currentFilter).map(item => /*#__PURE__*/_jsxDEV(TodoItem, {\n      itemObj: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}; // const mapStateToProps = (store: any) => {\n//   return {\n//     todoList: store.todoList,\n//   };\n// };\n\n\n_s(TodoList, \"DuYeSTlDT5s+8yoVdpsUJgxRD+M=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = TodoList;\nexport default _c2 = /*#__PURE__*/memo(TodoList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TodoList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/dell304/Selieznov/todo React/react_typescript/src/componenst/TodoList/index.tsx"],"names":["React","memo","TodoItem","useSelector","TodoList","currentFilter","store","todoList","storeFiltered","currentState","arrStore","filter","item","completed","map","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B,C,CACA;;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG;AAAC;AAA8B;AAAA;;AAC9C,QAAMC,aAAa,GAAGF,WAAW,CAAEG,KAAD,IAAgBA,KAAK,CAACD,aAAvB,CAAjC;AACA,QAAME,QAAQ,GAAGJ,WAAW,CAAEG,KAAD,IAAgBA,KAAK,CAACC,QAAvB,CAA5B;;AACA,QAAMC,aAAa,GAAG,CAACF,KAAD,EAAaG,YAAb,KAAsC;AAC1D,QAAIC,QAAJ;AACAD,IAAAA,YAAY,KAAK,KAAjB,GACKC,QAAQ,GAAGJ,KADhB,GAEKI,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAcC,IAAD,IAAe;AACtC,aAAOA,IAAI,CAACC,SAAL,MAAoBJ,YAAY,KAAK,WAArC,CAAP;AACD,KAFW,CAFhB;AAMA,WAAOC,QAAP;AACD,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cACGF,aAAa,CAACD,QAAD,EAAWF,aAAX,CAAb,CAAuCS,GAAvC,CAA4CF,IAAD,iBAC1C,QAAC,QAAD;AAAwB,MAAA,OAAO,EAAEA;AAAjC,OAAeA,IAAI,CAACG,EAApB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArBD,C,CAsBA;AACA;AACA;AACA;AACA;;;GA1BMX,Q;UACkBD,W,EACLA,W;;;KAFbC,Q;AA2BN,kCAAeH,IAAI,CAACG,QAAD,CAAnB","sourcesContent":["import React, { memo } from \"react\";\n// import { connect } from \"react-redux\";\nimport TodoItem from \"../../componenst/TodoItem\";\nimport { useSelector } from \"react-redux\";\n\n// interface Props {\n//   todoList: [\n//     key: {\n//       id: number;\n//       payload: string;\n//       completed: boolean;\n//     }\n//   ];\n// }\nconst TodoList = (/* { todoList }: Props */) => {\n  const currentFilter = useSelector((store: any) => store.currentFilter);\n  const todoList = useSelector((store: any) => store.todoList);\n  const storeFiltered = (store: any, currentState: string) => {\n    let arrStore;\n    currentState === \"all\"\n      ? (arrStore = store)\n      : (arrStore = store.filter((item: any) => {\n          return item.completed === (currentState === \"completed\");\n        }));\n\n    return arrStore;\n  };\n\n  return (\n    <div className=\"list\">\n      {storeFiltered(todoList, currentFilter).map((item: any) => (\n        <TodoItem key={item.id} itemObj={item} />\n      ))}\n    </div>\n  );\n};\n// const mapStateToProps = (store: any) => {\n//   return {\n//     todoList: store.todoList,\n//   };\n// };\nexport default memo(TodoList);\n"]},"metadata":{},"sourceType":"module"}