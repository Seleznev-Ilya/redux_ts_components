{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dell304/Selieznov/todo React/react_typescript/src/componenst/TodoReceiver/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addTodo } from \"../../actions\";\nimport InputMain from \"../InputMain\";\nimport selectImg from \"../../asset/images/select.svg\";\nimport unselectImg from \"../../asset/images/unselect.svg\";\n\nconst TodoReceiver = ({\n  todoList\n}) => {\n  _s();\n\n  const [selectButton, setSelectButton] = useState(true);\n\n  const selectButtonHendel = () => {\n    setSelectButton(!selectButton);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"receiver\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      onClick: selectButtonHendel,\n      className: `select ${todoList.length ? \"\" : \" opacity\"}`,\n      src: selectButton ? unselectImg : selectImg,\n      alt: \"selectImg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputMain, {\n      placeHolder: \"Add task here\",\n      action: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoReceiver, \"TheudfFycPyJPdPwEi8+nIatKtY=\");\n\n_c = TodoReceiver;\n\nconst mapStateToProps = store => {\n  return {\n    todoList: store.todoList\n  };\n};\n\nexport default connect(mapStateToProps)(TodoReceiver);\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoReceiver\");","map":{"version":3,"sources":["/home/dell304/Selieznov/todo React/react_typescript/src/componenst/TodoReceiver/index.tsx"],"names":["React","useState","connect","addTodo","InputMain","TodoReceiver","todoList","selectButton","setSelectButton","selectButtonHendel","length","unselectImg","selectImg","mapStateToProps","store"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,eAAxB;AAEA,OAAOC,SAAP,MAAsB,cAAtB;;;;AAcA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyB;AAAA;;AAC5C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAD,CAAhD;;AAEA,QAAMQ,kBAAkB,GAAG,MAAM;AAC/BD,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AACE,MAAA,OAAO,EAAEE,kBADX;AAEE,MAAA,SAAS,EAAG,UAASH,QAAQ,CAACI,MAAT,GAAkB,EAAlB,GAAuB,UAAW,EAFzD;AAGE,MAAA,GAAG,EAAEH,YAAY,GAAGI,WAAH,GAAiBC,SAHpC;AAIE,MAAA,GAAG,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,SAAD;AAAW,MAAA,WAAW,EAAE,eAAxB;AAAyC,MAAA,MAAM,EAAET;AAAjD;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAjBD;;GAAME,Y;;KAAAA,Y;;AAkBN,MAAMQ,eAAe,GAAIC,KAAD,IAAgB;AACtC,SAAO;AACLR,IAAAA,QAAQ,EAAEQ,KAAK,CAACR;AADX,GAAP;AAGD,CAJD;;AAMA,eAAeJ,OAAO,CAACW,eAAD,CAAP,CAAyBR,YAAzB,CAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { addTodo } from \"../../actions\";\n\nimport InputMain from \"../InputMain\";\n\nimport selectImg from \"../../asset/images/select.svg\";\nimport unselectImg from \"../../asset/images/unselect.svg\";\n\ninterface Props {\n  todoList: [\n    key: {\n      id: number;\n      payload: string;\n      completed: boolean;\n    }\n  ];\n}\nconst TodoReceiver = ({ todoList }: Props) => {\n  const [selectButton, setSelectButton] = useState(true);\n\n  const selectButtonHendel = () => {\n    setSelectButton(!selectButton);\n  };\n  return (\n    <div className=\"receiver\">\n      <img\n        onClick={selectButtonHendel}\n        className={`select ${todoList.length ? \"\" : \" opacity\"}`}\n        src={selectButton ? unselectImg : selectImg}\n        alt=\"selectImg\"\n      />\n      <InputMain placeHolder={\"Add task here\"} action={addTodo} />\n    </div>\n  );\n};\nconst mapStateToProps = (store: any) => {\n  return {\n    todoList: store.todoList,\n  };\n};\n\nexport default connect(mapStateToProps)(TodoReceiver);\n"]},"metadata":{},"sourceType":"module"}